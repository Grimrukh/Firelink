name: Build and Test DLLs

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Checkout the code.
      - name: Checkout code
        uses: actions/checkout@v3

      # CMake 3.31 is already installed on the Windows runner.
      - name: Verify CMake version
        run: cmake --version

      # Install ninja-build tool (currently 1.11.1).
      - name: Install ninja-build tool
        uses: seanmiddleditch/gha-setup-ninja@v5

      # Default MinGW (posix-seh) may have limited <format> support for C++20.
#      - name: Install UCRT MinGW Toolchain
#        run: |
#          C:\msys64\usr\bin\bash -lc "pacman --noconfirm -S mingw-w64-ucrt-x86_64-gcc"
#          echo "C:\msys64\mingw64\bin" >> "$GITHUB_PATH"
#          echo "C:\msys64\ucrt64\bin" >> "$GITHUB_PATH"

      - name: Check MSVC (cl.exe) version (Optional)
        run: cl.exe
        continue-on-error: true

      # Configure with CMake (Release) to `build` subdirectory.
      - name: Configure CMake with MSVC
        run: >
          cmake -S . -B build
          -G "Visual Studio 17 2022"
          -A x64
          -DCMAKE_BUILD_TYPE=Release

      # Build the project (Release) from `build` subdirectory.
      - name: Build the DLLs
        run: cmake --build build --config Release

      # Run the executable.
      - name: Run the Executable
        run: build/Release/GrimHookTest.exe
